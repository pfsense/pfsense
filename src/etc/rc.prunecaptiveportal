#!/usr/local/bin/php-cgi -f
<?php
/*
 * rc.prunecaptiveportal
 *
 * part of pfSense (https://www.pfsense.org)
 * Copyright (c) 2004-2013 BSD Perimeter
 * Copyright (c) 2013-2016 Electric Sheep Fencing
 * Copyright (c) 2014-2023 Rubicon Communications, LLC (Netgate)
 * All rights reserved.
 *
 * Originally part of m0n0wall (http://m0n0.ch/wall)
 * Copyright (c) 2003-2004 Manuel Kasper <mk@neon1.net>.
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* parse the configuration and include all functions used below */
/* config.inc retrieves the util.inc and globals.inc */
require_once("config.inc");
require_once("functions.inc");
require_once("filter.inc");
require_once("shaper.inc");
require_once("captiveportal.inc");

global $g;
global $cpzone;
global $cpzoneid;

$cpzone = str_replace("\n", "", $argv[1]);
if (!is_array($config['captiveportal'][$cpzone])) {
	log_error("{$cpzone} is not a valid zone in the configuration!");
	return;
}
$cpzoneid = $config['captiveportal'][$cpzone]['zoneid'];

$rcprunelock = try_lock("rcprunecaptiveportal{$cpzone}", 3);

if (!$rcprunelock) {
	log_error("Skipping CP pruning process for zone {$cpzone} because previous/another instance is already running");
	unlock_force("rcprunecaptiveportal{$cpzone}");
	return;
}

captiveportal_prune_old();

unlock($rcprunelock);

?>
