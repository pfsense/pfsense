#!/bin/sh

export PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin

DNSALLOWOVERRIDE=$(/usr/local/sbin/read_xml_tag.sh boolean system/dnsallowoverride)

IF="${1}"
PROTOCOL="${2}"
LOCAL_IP="${3}"
REMOTE_IP="${4}"
AUTH_NAME="${5}"
DNS1_RAW="${6}"
DNS2_RAW="${7}"

if [ "${PROTOCOL}" == "inet" ]; then

	OLD_ROUTER=`cat /tmp/${IF}_router`
	if [ -n "${OLD_ROUTER}" ]; then
		echo "Removing states to old router ${OLD_ROUTER}" | logger -t ppp-linkup
		pfctl -i ${IF} -k 0.0.0.0/0 -k ${OLD_ROUTER}/32
		pfctl -i ${IF} -k ${OLD_ROUTER}/32 -k 0.0.0.0/0
	fi

	# let the configuration system know that the ipv4 has changed.
	echo ${REMOTE_IP} > /tmp/${IF}_router
	echo ${LOCAL_IP} > /tmp/${IF}_ip
	touch /tmp/${IF}up

	if [ "${DNSALLOWOVERRIDE}" = "true" ]; then
		# write nameservers to file
		echo -n "" > /var/etc/nameserver_${IF}
		if echo "${DNS1_RAW}" | grep -q dns1; then
			DNS1=`echo "${DNS1_RAW}" | awk '{print $2}'`
			echo "${DNS1}" >> /var/etc/nameserver_${IF}
			route change "${DNS1}" ${REMOTE_IP}
		fi
		if echo "${DNS2_RAW}" | grep -q dns2; then
			DNS2=`echo "${DNS2_RAW}" | awk '{print $2}'`
			echo "${DNS2}" >> /var/etc/nameserver_${IF}
			route change "${DNS2}" ${REMOTE_IP}
		fi
		pfSctl -c 'service reload dns'
		sleep 1
	fi
	pfSctl -c "interface newip ${IF}"

elif [ "${PROTOCOL}" == "inet6" ]; then
	/usr/local/sbin/ppp-ipv6 ${IF} up
	# let the configuration system know that the ipv6 has changed.
	echo ${REMOTE_IP} |cut -d% -f1 > /tmp/${IF}_routerv6
	echo ${LOCAL_IP} |cut -d% -f1 > /tmp/${IF}_ipv6
	touch /tmp/${IF}upv6

	if [ "${DNSALLOWOVERRIDE}" = "true" ]; then
		# write nameservers to file
		echo -n "" > /var/etc/nameserver_v6${IF}
		if echo "${DNS1_RAW}" | grep -q dns1; then
			DNS1=`echo "${DNS1_RAW}" | awk '{print $2}'`
			echo "${DNS1}" >> /var/etc/nameserver_v6${IF}
			route change -inet6 "${DNS1}" ${REMOTE_IP}
		fi
		if echo "${DNS2_RAW}" | grep -q dns2; then
			DNS2=`echo "${DNS2_RAW}" | awk '{print $2}'`
			echo "${DNS2}" >> /var/etc/nameserver_v6${IF}
			route change -inet6 "${DNS2}" ${REMOTE_IP}
		fi
		pfSctl -c 'service reload dns'
		sleep 1
	fi
	pfSctl -c "interface newipv6 ${IF}"
fi

exit 0
