#!/bin/sh
#
# rc.embedded - embedded system specific startup information
# For pfSense

# Set our operating platform
PLATFORM=`/bin/cat /etc/platform`

# Size of /tmp
USE_MFS_TMP_SIZE=`/usr/bin/grep use_mfs_tmp_size /cf/conf/config.xml | /usr/bin/cut -f2 -d'>' | /usr/bin/cut -f1 -d'<'`
if [ ! -z ${USE_MFS_TMP_SIZE} ] && [ ${USE_MFS_TMP_SIZE} -gt 0 ]; then
	tmpsize="${USE_MFS_TMP_SIZE}m"
else
	tmpsize="40m"
fi

# Size of /var
USE_MFS_VAR_SIZE=`/usr/bin/grep use_mfs_var_size /cf/conf/config.xml | /usr/bin/cut -f2 -d'>' | /usr/bin/cut -f1 -d'<'`
if [ ! -z ${USE_MFS_VAR_SIZE} ] && [ ${USE_MFS_VAR_SIZE} -gt 0 ]; then
	varsize="${USE_MFS_VAR_SIZE}m"
else
	varsize="60m"
fi

echo -n "Setting up memory disks..."
USE_MFS_TMP=`/usr/bin/grep -c use_mfs_tmp /cf/conf/config.xml`
if [ "${PLATFORM}" = "nanobsd" ] || [ ${USE_MFS_TMP} -gt 0 ]; then
	mdmfs -S -M -s ${tmpsize} md /tmp
fi

USE_MFS_VAR=`/usr/bin/grep -c use_mfs_var /cf/conf/config.xml`
if [ "${PLATFORM}" = "nanobsd" ] || [ ${USE_MFS_VAR} -gt 0 ]; then
	mdmfs -S -M -s ${varsize} md /var

	# Create some needed directories
	/bin/mkdir -p /var/db /var/spool/lock
	/usr/sbin/chown uucp:dialer /var/spool/lock

	# Ensure vi's recover directory is present
	/bin/mkdir -p /var/tmp/vi.recover/
fi

echo " done."
