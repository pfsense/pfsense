<?xml version="1.0" encoding="utf-8" ?>
<packagegui>
	<title>Services/UPnP IGD &amp; PCP</title>
	<name>miniupnpd</name>
	<version>20100712</version>
	<include_file>/usr/local/pkg/miniupnpd.inc</include_file>
	<menu>
		<name>UPnP IGD &amp; PCP</name>
		<tooltiptext>Set service settings such as interfaces to listen on.</tooltiptext>
		<section>Services</section>
		<url>/pkg_edit.php?xml=miniupnpd.xml&amp;id=0</url>
	</menu>
	<service>
		<name>miniupnpd</name>
		<rcfile>miniupnpd.sh</rcfile>
		<executable>miniupnpd</executable>
	</service>
	<fields>
		<field>
			<name>Service Description</name>
			<type>listtopic</type>
		</field>
		<field>
			<name>Service Help</name>
			<type>info</type>
			<description>
				<![CDATA[
				Universal Plug and Play Internet Gateway Device (UPnP IGD) and Port Control Protocol (PCP) are
				network protocols which allow local software and devices to configure each other when attaching
				to a network. This includes autonomously creating dynamic NAT rules to redirect and pass
				incoming connections from remote hosts.
				]]>
			</description>
		</field>
		<field>
			<name>Service Settings</name>
			<type>listtopic</type>
			<enablefields>enable_upnp,enable_natpmp,ext_iface,iface_array,download,upload,overridewanip,upnpqueue,logpackets,sysuptime,permdefault</enablefields>
		</field>
		<field>
			<fielddescr>Enable</fielddescr>
			<fieldname>enable</fieldname>
			<type>checkbox</type>
			<enablefields>enable_upnp,enable_natpmp,ext_iface,iface_array,download,upload,overridewanip,upnpqueue,logpackets,sysuptime,permdefault</enablefields>
			<description>Enable port mapping service</description>
			<sethelp>
				<![CDATA[
				Enables the UPnP IGD & PCP daemon for autonomous port mapping.
				Also requires enabling one or both protocols below.
				]]>
			</sethelp>
		</field>
		<field>
			<fielddescr>UPnP IGD</fielddescr>
			<fieldname>enable_upnp</fieldname>
			<type>checkbox</type>
			<description>Allow UPnP IGD Port Mapping</description>
			<sethelp>
				<![CDATA[
				Enables support for client requests using Universal Plug and Play Internet
				Gateway Device (UPnP IGD).
				<br/><br/>
				This protocol is commonly used by game consoles and Microsoft-compatible systems.
				]]>
			</sethelp>
		</field>
		<field>
			<fielddescr>PCP/NAT-PMP</fielddescr>
			<fieldname>enable_natpmp</fieldname>
			<type>checkbox</type>
			<description>Allow PCP/NAT-PMP Port Mapping</description>
			<sethelp>
				<![CDATA[
				Enables support for client requests using Port Control Protocol (PCP) and its
				compatible predecessor NAT Port Mapping Protocol (NAT-PMP).
				<br/><br/>
				These protocols are commonly used by Apple-compatible systems.
				]]>
			</sethelp>
		</field>
		<field>
			<fielddescr>External Interface</fielddescr>
			<fieldname>ext_iface</fieldname>
			<default_value>wan</default_value>
			<type>interfaces_selection</type>
			<hideinterfaceregex>loopback</hideinterfaceregex>
			<description>The WAN interface containing the default gateway.</description>
			<required/>
		</field>
		<field>
			<fielddescr>Internal Interfaces</fielddescr>
			<fieldname>iface_array</fieldname>
			<default_value>lan</default_value>
			<type>interfaces_selection</type>
			<description>
				<![CDATA[
				Select one or more internal interfaces, such as LAN, where UPnP IGD & PCP clients reside.
				<br/><br/>
				Use the CTRL or COMMAND key to select multiple interfaces.
				]]>
			</description>
			<required/>
			<multiple/>
		</field>
		<field>
			<name>External Address Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<name>External Address Help</name>
			<type>info</type>
			<description>
				<![CDATA[
				This service <strong>must</strong> be able to locate its routable public IP
				address to function properly. If this device is behind NAT, port forwarding may
				be impossible.
				<br/><br/>
				If the <strong>External Interface</strong> has a public IP address, the settings
				in this section may be left empty/disabled. If the interface has a private
				address, the service will refuse to map any ports without additional
				configuration.
				<br/><br/>
				If the <strong>External Interface</strong> is behind unrestricted NAT with
				incoming traffic forwarded from upstream without any filtering, this service can
				still function so long as it can locate its public IP address.
				<br/><br/>
				The service can learn the public IP address and NAT type using an external server
				via the STUN protocol or if the address is static it can be hard-coded using the
				<strong>Override WAN Address</strong> setting.
				]]>
			</description>
		</field>
		<field>
			<fielddescr>Enable STUN</fielddescr>
			<fieldname>enable_stun</fieldname>
			<type>checkbox</type>
			<description>
				Use STUN to determine the external interface address and NAT type
			</description>
			<sethelp>
				<![CDATA[
				Query an external STUN server to locate the routable public IP address for the
				external interface. This is useful for devices behind 1:1 NAT with a dynamic
				public address.
				<br/><br/>
				This also tests inbound NAT connectivity. The service will disable port mapping
				if NAT testing determines inbound connections are not being forwarded to this
				device.
				]]>
			</sethelp>
			<enablefields>stun_host,stun_port</enablefields>
		</field>
		<field>
			<fielddescr>STUN Server</fielddescr>
			<fieldname>stun_host</fieldname>
			<type>input</type>
			<description>
				<![CDATA[
				Hostname or IP address of an external STUN server.
				<br/><br/>
				Example public STUN servers:
				<ul>
					<li>stun.counterpath.com</li>
					<li>stun.cloudflare.com</li>
				</ul>
				]]>
			</description>
		</field>
		<field>
			<fielddescr>STUN Port</fielddescr>
			<fieldname>stun_port</fieldname>
			<type>input</type>
			<default_value>3478</default_value>
			<description>UDP port the STUN Server uses to accept queries (Default: 3478)</description>
		</field>
		<field>
			<fielddescr>Override WAN Address</fielddescr>
			<fieldname>overridewanip</fieldname>
			<description>
				<![CDATA[
				Manually configures a public routable IP address this device can use to accept
				inbound connections.
				<br/><br/>
				This can either be an upstream static routable IP address with traffic forwarded
				to this device via NAT or an alternate routable IP address on this device, such
				as a virtual IP address.
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<name>Advanced Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Download Speed</fielddescr>
			<fieldname>download</fieldname>
			<description>
				<![CDATA[
				Value to report when clients query the maximum link download speed (Kbit/s).
				<br/><br/>
				The default value is the link speed of the interface.
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Upload Speed</fielddescr>
			<fieldname>upload</fieldname>
			<description>
				<![CDATA[
				Value to report when clients query the maximum link upload speed (Kbit/s).
				<br/><br/>
				The default value is the link speed of the interface.
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Traffic Shaping</fielddescr>
			<fieldname>upnpqueue</fieldname>
			<description>ALTQ traffic shaping queue name for connections passed through port mappings.</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Custom Presentation URL</fielddescr>
			<fieldname>presentationurl</fieldname>
			<type>input</type>
			<description>
				<![CDATA[
				URL to report when clients query the management URL for this device.
				<br/><br/>
				The default value is the URL for the GUI on this firewall.
				]]>
			</description>
		</field>
		<field>
			<fielddescr>Custom Model Number</fielddescr>
			<fieldname>modelnumber</fieldname>
			<type>input</type>
			<description>
				<![CDATA[
				Value to report when clients query for the model number of this device.
				<br/><br/>
				The default value is the current firmware version of this device.
				]]>
			</description>
		</field>
		<field>
			<fielddescr>Firewall Logs</fielddescr>
			<fieldname>logpackets</fieldname>
			<type>checkbox</type>
			<description>Log mapped connections</description>
			<sethelp>When set, connections matching dynamic port mapping rules will appear in the firewall log.</sethelp>
		</field>
		<field>
			<fielddescr>Uptime</fielddescr>
			<fieldname>sysuptime</fieldname>
			<type>checkbox</type>
			<description>Report system uptime</description>
			<sethelp>
				When set, if a client asks for the uptime, the service will report the uptime
				of the device (since last boot) instead of the how long the service has been
				running.
			</sethelp>
		</field>
		<field>
			<name>Service Access Control List</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Default Deny</fielddescr>
			<fieldname>permdefault</fieldname>
			<type>checkbox</type>
			<description>Deny access to port mapping service by default</description>
			<sethelp>
				When set, clients are denied access unless their port mapping requests match an ACL entry.
			</sethelp>
		</field>
		<field>
			<name>ACL Help</name>
			<type>info</type>
			<description>
				<![CDATA[
				ACL entries grant or deny access to the port mapping service based on several
				criteria. The entries only control access for IPv4 clients, they do not apply
				to IPv6 clients.
				<br/><br/>
				Format: <tt>[allow or deny] [ext port or range] [int ipaddr or ipaddr/CIDR] [int port or range]</tt>
				<br/>
				Example: <tt>allow 1024-65535 192.168.0.0/24 1024-65535</tt>
				]]>
			</description>
		</field>
		<field>
			<fielddescr>ACL Entries</fielddescr>
			<fieldname>none</fieldname>
			<type>rowhelper</type>
			<rowhelper>
				<rowhelperfield>
					<fieldname>permuser</fieldname>
					<type>input</type>
					<size>60</size>
				</rowhelperfield>
			</rowhelper>
		</field>
	</fields>
	<custom_php_command_before_form>
		before_form_miniupnpd($pkg);
	</custom_php_command_before_form>
	<custom_php_validation_command>
		validate_form_miniupnpd($_POST, $input_errors);
	</custom_php_validation_command>
	<custom_php_resync_config_command>
		sync_package_miniupnpd();
	</custom_php_resync_config_command>
</packagegui>
