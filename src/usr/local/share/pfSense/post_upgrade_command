#!/bin/sh
#
# post_upgrade_command
#
# part of pfSense (https://www.pfsense.org)
# Copyright (c) 2004-2016 Electric Sheep Fencing, LLC
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

/etc/rc.conf_mount_rw

PFSENSETYPE=`cat /etc/platform`

if [ "${PFSENSETYPE}" = "pfSense" -o "${PFSENSETYPE}" = "nanobsd" ]; then
	touch /conf/needs_package_sync_after_reboot
fi

if [ "${PFSENSETYPE}" = "nanobsd" ]; then
	ROOT=/tmp/${1}/
else
	ROOT=/
fi

# Now turn on or off serial console as needed
echo "Checking for ${ROOT}usr/local/share/pfSense/post_upgrade_command.php... " >> /conf/upgrade_log.txt
if [ -x ${ROOT}usr/local/share/pfSense/post_upgrade_command.php ]; then
	echo "Running ${ROOT}usr/local/share/pfSense/post_upgrade_command.php $1" >> /conf/upgrade_log.txt
	${ROOT}usr/local/share/pfSense/post_upgrade_command.php $1 >> /conf/upgrade_log.txt 2>&1
fi

# Fixup permissions on installed files
if [ -f ${ROOT}usr/local/share/pfSense/base.mtree ]; then
	if [ -x "/tmp/mtree.old" ]; then
		MTREE_BIN=/tmp/mtree.old
	else
		MTREE_BIN=/usr/sbin/mtree
	fi
	${MTREE_BIN} -U -e -q -f ${ROOT}usr/local/share/pfSense/base.mtree -p ${ROOT} > /conf/mtree.log
fi

# Make sure to preserve existing time zone
if [ "${PFSENSETYPE}" = "nanobsd" -a -f /etc/localtime ]; then
	/bin/cp -p /etc/localtime ${ROOT}etc/localtime 2>/dev/null
fi

# Files may contain spaces
oIFS=${IFS}
IFS="
"
# Obsolete files - nanobsd doesn't need it since a new image is installed
# on the other partition
if [ "${PFSENSETYPE}" != "nanobsd" -a -f /etc/pfSense.obsoletedfiles ]; then
	for f in $(cat /etc/pfSense.obsoletedfiles); do
		if [ -n "${f}" -a -f "${f}" ]; then
			rm -f "${f}"
		elif [ -n "${f}" -a -d "${f}" ]; then
			rm -rf "${f}"
		fi
	done
fi

# Restore IFS
IFS=${oIFS}
