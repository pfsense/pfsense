#!/usr/local/bin/php-cgi -q
<?php
/*
 * rc.restore_config_backup
 *
 * part of pfSense (https://www.pfsense.org)
 * Copyright (c) 2004-2013 BSD Perimeter
 * Copyright (c) 2013-2016 Electric Sheep Fencing
 * Copyright (c) 2014-2020 Rubicon Communications, LLC (Netgate)
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

require_once('config.inc');

cleanup_backupcache();
$confvers = get_backups();
unset($confvers['versions']);

$fp = fopen('php://stdin', 'r');

function list_backups($which="all", $return=false) {
	global $confvers;

	if (count($confvers) == 0) {
		echo gettext("No backups found in the configuration history.");
		return;
	}

	for ($c = count($confvers)-1; $c >= 0; $c--) {
		if (is_numeric($which) && ($c != $which)) {
			continue;
		}
		echo backup_info($confvers[$c], $c+1);
		echo "\n";
	}
}

function choose_backup() {
	global $fp, $confvers;
	if (count($confvers) == 0) {
		echo gettext("No backups found in the configuration history.");
		return -1;
	}
	echo gettext("Which configuration would you like to restore?") . "\n";
	echo " 1-" . count($confvers) . " : ";
	$number = strtoupper(chop(fgets($fp)));
	if (is_numeric($number) && ($number > 0) && ($number <= count($confvers))) {
		return $number;
	} else {
		echo gettext("That is not a valid backup number.\n");
		return -1;
	}
}

function restore_history_backup($number) {
	global $g, $fp, $confvers;
	if (is_numeric($number) && ($number > 0) && ($number <= count($confvers))) {
		$realnumber = $number - 1;
		echo "\n" . gettext("Is this the backup you wish to restore?") . "\n";
		list_backups($realnumber);
		$thisbackup = $confvers[$realnumber];
		echo gettext("Y/N?") . " : ";
		$confirm = strtoupper(chop(fgets($fp)));
		if ($confirm == gettext("Y")) {
			if (config_restore($g['conf_path'] . '/backup/config-' . $thisbackup['time'] . '.xml') == 0) {
				echo "\n";
				echo sprintf(gettext('Successfully reverted to timestamp %1$s with description "%2$s".'), date(gettext("n/j/y H:i:s"), $thisbackup['time']), $thisbackup['description']);
				echo "\n" . gettext("You may need to reboot the firewall or restart services before the restored configuration is fully active.") . "\n\n";
				if (file_exists("{$g['conf_path']}/trigger_initial_wizard")) {
					/* restoring from a backup history means that the assignment is OK,
					 * interfaces reassignment may only be need on restore from the WebGUI */
					touch("{$g['conf_path']}/assign_complete");
				}
			} else {
				echo gettext("Unable to revert to the selected configuration.") . "\n";
			}
		} else {
			echo gettext("Restore cancelled.") . "\n";
		}
	} else {
		echo gettext("Restore cancelled due to invalid input.") . "\n";
	}
}

while (true) {

	echo "\n";
	echo gettext("Restore Backup from Configuration History") . "\n\n";
	echo "1) " . gettext("List Backups") . "\n";
	echo "2) " . gettext("Restore Backup") . "\n";
	echo "Q) " . gettext("Quit") . "\n";
	echo "\n\n";
	echo gettext("Please select an option to continue") . ": ";

	$command = strtolower(chop(fgets($fp)));

	// Make sure we can detect a foreign language "quit" command.
	if (strtolower($command) == gettext("quit")) {
		$command = "quit";
	}

	switch ($command) {
		case "q":
		case "quit":
			echo "\n";
			fclose($fp);
			die;
			break;
		case "1":
			list_backups();
			break;
		case "2":
			$number = choose_backup();
			restore_history_backup($number);
			fclose($fp);
			die;
			break;
	}
}

fclose($fp);
die;
?>
