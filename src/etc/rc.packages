#!/usr/local/bin/php -f
<?php
/*
 * rc.packages
 *
 * part of pfSense (https://www.pfsense.org)
 * Copyright (c) 2004-2013 BSD Perimeter
 * Copyright (c) 2013-2016 Electric Sheep Fencing
 * Copyright (c) 2014-2023 Rubicon Communications, LLC (Netgate)
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* If PHP is not running, silently abort and run registration during boot */
if (!file_exists('/var/run/php-fpm.pid')) {
	exit;
}

require_once("config.inc");
require_once("functions.inc");
require_once("filter.inc");
require_once("shaper.inc");
require_once("captiveportal.inc");
require_once("pkg-utils.inc");
require_once("pfsense-utils.inc");

function usage() {
	print "Usage: rc.packages PKG_NAME (POST-INSTALL|DEINSTALL|POST-DEINSTALL)\n";
	exit(1);
}

$pkg_interface = "console";

/* Keep old behavior: with no params, sync all and exit */
if ($argc == 1) {
	resync_all_package_configs(true);
	exit;
}

$pkg = '';
$when = '';

if (isset($_GET['pkg'])) {
	$pkg = $_GET['pkg'];
} else {
	$pkg = $argv[1];
}

if (isset($_GET['when'])) {
	$when = strtolower($_GET['when']);
} else {
	$when = strtolower($argv[2]);
}

if ($pkg == '' || $when == '') {
	print "Error: invalid parameters\n";
	usage();
}

/* Remove pkg_prefix from pkg name */
pkg_remove_prefix($pkg);

switch ($when) {
	case "post-install":
		install_package_xml($pkg);
		break;
	case "deinstall":
	case "post-deinstall":
		delete_package_xml($pkg, $when);
		break;
	default:
		usage();
}

?>
